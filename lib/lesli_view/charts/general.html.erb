<script>
document.addEventListener("turbo:load", () => {
    const chartId = "<%= id %>";
    const chartElement = document.getElementById(chartId);

    if (!chartElement) {
        ///console.warn("Chart element not found:", chartId);
        return;
    }

    // Clear previous chart instance (important for Turbo re-renders)
    chartElement.innerHTML = "";

    var options = {
        series: <%= raw(series.to_json) %>,
        labels: <%= raw(labels.to_json) %>,
        grid: {
            show: false,
            padding: { top: 0, right: 0, bottom: 0, left: 0 }
        },
        chart: {
            type: "<%= type %>",
            height: "<%= height %>",
            toolbar: { show: false },
            events: {
                markerClick: function(event, chartContext, { seriesIndex, dataPointIndex }) {
                    emit("markerClick", { seriesIndex, dataPointIndex });
                }
            }
        },
        legend: {
            show: true,
            position: "top",
            horizontalAlign: "center"
        },
        plotOptions: {
            bar: {
                borderRadius: 6,
                borderRadiusApplication: 'end',
                dataLabels: {
                    position: 'top', // top, center, bottom
                },
            }
        },
        dataLabels: { enabled: true },
        stroke: {
            show: true,
            curve: "smooth",
            lineCap: "round"
        },
        xaxis: {
            categories: <%= raw(labels.to_json) %>,
            tickPlacement: "between",
            labels: {
                show: true,
                rotate: -65,
                rotateAlways: false,
                trim: false,
                offsetY: 5,
                style: { fontSize: "15px" }
            }
        },
        yaxis: { show: true }
    };

    // Overrides for compact view
    <% if compact %>
        options.chart.sparkline = { enabled: true };

        <% if type == "bar" %>
            options.dataLabels.formatter= function (value, { seriesIndex, dataPointIndex, w }) {
                const label = w.globals.labels[dataPointIndex]; 
                return `${label}: ${value}`;
            }
        <% elsif type="line" %>
            options.grid.padding = { top: 14, right: 0, bottom: 6, left: 0 }
        <% end %>

    <% end %>

    const chart = new ApexCharts(chartElement, options);
    chart.render()
});
</script>

<div class="lesli-charts lesli-charts-<%= type %> section box mb-0 p-0 pt-1">

    <% if title.present? %>
        <%= tag.h3(title, class: (compact ? "is-size-7 has-text-centered" : "ml-2")) %>
    <% end %>

    <% if subtitle.present? %>
        <p class="ml-2"><b><%= subtitle %></b></p>
    <% end %>

    <div id="<%= id %>"></div>
</div>
